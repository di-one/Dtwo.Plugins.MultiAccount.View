@using API;
@using MultiAccount;
@using Dtwo.API.View.Components.Layout
       
@* <MudCard class="demo-mat-card">
    <MudCardMedia Image="@API.SpritesManager.GetCharacterIconPath(Controller.Character.Breed, Controller.Character.Sex)" Height="150"></MudCardMedia>
            <MudCardContent>
                <MudText Typo="Typo.h5">
                    @if (Controller.Character != null)
                        {
                           @Controller.Character.Name;
                        }
                       else
                       {
                           @Controller.WindowProcess.ProcessName;
                       }
                </MudText>
            </MudCardContent>
            <MudCardActions>
                @if (ShowAdd)
                {
                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="ClickAdd">Add</MudButton>
                }
                @if (ShowRemove)
                {
                    <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="ClickRemove">Remove</MudButton>
                }
            </MudCardActions>
</MudCard> *@

<DtwoCard>
     <DtwoStack Orientation="EStackOrientation.Horizontal" JustifyContent="EJustifyContent.Start" Gap="1rem" class="rz-p-4">
            <DtwoImage Path="" style="width: 100px; height: 100px; border-radius: 50%;" />
            <DtwoStack Gap="0">
                <DtwoText TextStyle="ETextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Personnage</DtwoText>
                <DtwoText TextStyle="ETextStyle.Body1">
                    <b>
                    @if (Controller.Character != null)
                    {
                        @Controller.Character.Name;
                    }
                    else
                    {
                        @Controller.WindowProcess.ProcessName;
                    }
                    </b>
                </DtwoText>
                <DtwoText TextStyle="ETextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Options</DtwoText>
                @if (ShowAdd)
                {
                <DtwoButton Variant="EVariant.Flat" Color="EColor.Primary" OnClicked="(args) => ClickAdd()">Add</DtwoButton>
                }
                @if (ShowRemove)
                {
                <DtwoButton Variant="EVariant.Flat" Color="EColor.Danger" OnClicked="(args) => ClickRemove()">Remove</DtwoButton>
                }
            </DtwoStack>
        </DtwoStack>
</DtwoCard>

@code {
    [Parameter]
    public DofusWindow Controller { get; set; }
    [Parameter]
    public bool ShowRemove { get; set; }
     [Parameter]
    public bool ShowAdd { get; set; }
    [Parameter]
    public Action<DofusWindow> OnClickAdd { get; set; }
    [Parameter]
    public Action<DofusWindow> OnClickRemove { get; set; }

    public void ClickAdd() => OnClickAdd?.Invoke(Controller);
    public void ClickRemove() => OnClickRemove?.Invoke(Controller);
}
